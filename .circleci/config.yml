version: 2

anchors:
  - &defaults
    docker:
      - image: hashicorp/terraform:1.3.5
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1

  - &staging
    <<: *defaults
    environment:
      TERRAFORM_TARGET_DIR: staging

  - &production
    <<: *defaults
    environment:
      TERRAFORM_TARGET_DIR: production

  # For aws template
  - &aws_plan
    steps:
      - checkout
      - run:
          name: fmt
          command: terraform fmt -recursive ./aws/src
      - run:
          name: init
          command: cd ./aws/src/environments/${TERRAFORM_TARGET_DIR} && terraform init -backend-config="backend.cfg"
      - run:
          name: plan
          command: cd ./aws/src/environments/${TERRAFORM_TARGET_DIR} && terraform plan -var "nr_account_id=${NEWRELIC_ACCOUNT_ID}" -var "nr_api_key=${NEWRELIC_API_KEY}" -var "nr_license_key=${NEWRELIC_LICENSE_KEY}"

  - &aws_apply
    steps:
      - checkout
      - run:
          name: init
          command: cd ./aws/src/environments/${TERRAFORM_TARGET_DIR} && terraform init -backend-config="backend.cfg"
      - run:
          name: apply
          command: cd ./aws/src/environments/${TERRAFORM_TARGET_DIR} && terraform apply -auto-approve -var "nr_account_id=${NEWRELIC_ACCOUNT_ID}" -var "nr_api_key=${NEWRELIC_API_KEY}" -var "nr_license_key=${NEWRELIC_LICENSE_KEY}"

  # For alert template
  - &alert_plan
    steps:
      - checkout
      - run:
          name: fmt
          command: terraform fmt -recursive ./alert/src
      - run:
          name: init
          command: cd ./alert/src/environments/${TERRAFORM_TARGET_DIR} && terraform init -backend-config="backend.cfg"
      - run:
          name: plan
          command: cd ./alert/src/environments/${TERRAFORM_TARGET_DIR} && terraform plan -var "nr_account_id=${NEWRELIC_ACCOUNT_ID}" -var "nr_api_key=${NEWRELIC_API_KEY}"

  - &alert_apply
    steps:
      - checkout
      - run:
          name: init
          command: cd ./alert/src/environments/${TERRAFORM_TARGET_DIR} && terraform init -backend-config="backend.cfg"
      - run:
          name: apply
          command: cd ./alert/src/environments/${TERRAFORM_TARGET_DIR} && terraform apply -auto-approve -var "nr_account_id=${NEWRELIC_ACCOUNT_ID}" -var "nr_api_key=${NEWRELIC_API_KEY}"

jobs:
  # For aws template
  staging_aws_plan:
    <<: *staging
    <<: *aws_plan

  production_aws_plan:
    <<: *production
    <<: *aws_plan

  staging_aws_apply:
    <<: *staging
    <<: *aws_apply

  production_aws_apply:
    <<: *production
    <<: *aws_apply

  # For alert template
  staging_alert_plan:
    <<: *staging
    <<: *alert_plan

  production_alert_plan:
    <<: *production
    <<: *alert_plan

  staging_alert_apply:
    <<: *staging
    <<: *alert_apply

  production_alert_apply:
    <<: *production
    <<: *alert_apply

workflows:
  version: 2

  main:
    jobs:
      # For aws template
      - staging_aws_plan:
          context: stg-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          filters:
            branches:
              ignore:
                - main

      - staging_aws_apply_approve:
          requires:
            - staging_aws_plan
          type: approval

      - staging_aws_apply:
          context: stg-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - staging_aws_apply_approve

      - production_aws_plan:
          context: prd-newrelic-template  # 事前に作成した Contexts 名を指定してください。

      - production_aws_apply_approve:
          requires:
            - production_aws_plan
          type: approval
          filters:
            branches:
              only:
                - main

      - production_aws_apply:
          context: prd-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - production_aws_apply_approve

      # For alert template
      - staging_alert_plan:
          context: stg-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          filters:
            branches:
              ignore:
                - main
          requires:
            - staging_aws_plan

      - staging_alert_apply_approve:
          requires:
            - staging_alert_plan
            - staging_aws_apply
          type: approval

      - staging_alert_apply:
          context: stg-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - staging_alert_apply_approve

      - production_alert_plan:
          context: prd-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - production_aws_plan

      - production_alert_apply_approve:
          requires:
            - production_alert_plan
            - production_aws_apply
          type: approval
          filters:
            branches:
              only:
                - main

      - production_alert_apply:
          context: prd-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - production_alert_apply_approve
