version: 2.1

executors:
  newrelic_template:
    docker:
      - image: hashicorp/terraform:1.8.1
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1

jobs:
  # For common
  fmt:
    executor: newrelic_template
    steps:
      - checkout
      - run:
          name: fmt
          command: terraform fmt -recursive -check ./

  # For aws template
  aws_plan:
    executor: newrelic_template
    parameters:
      env:
        type: string
    steps:
      - checkout
      - run:
          name: init
          command: cd ./aws/src/environments/<< parameters.env >> && terraform init -backend-config="backend.cfg"
      - run:
          name: plan
          command: cd ./aws/src/environments/<< parameters.env >> && terraform plan -var "nr_account_id=${NEWRELIC_ACCOUNT_ID}" -var "nr_api_key=${NEWRELIC_API_KEY}" -var "nr_license_key=${NEWRELIC_LICENSE_KEY}"
  aws_apply:
    executor: newrelic_template
    parameters:
      env:
        type: string
    steps:
      - checkout
      - run:
          name: init
          command: cd ./aws/src/environments/<< parameters.env >> && terraform init -backend-config="backend.cfg"
      - run:
          name: apply
          command: cd ./aws/src/environments/<< parameters.env >> && terraform apply -auto-approve -var "nr_account_id=${NEWRELIC_ACCOUNT_ID}" -var "nr_api_key=${NEWRELIC_API_KEY}" -var "nr_license_key=${NEWRELIC_LICENSE_KEY}"

  # For alert template
  alert_plan:
    executor: newrelic_template
    parameters:
      env:
        type: string
    steps:
      - checkout
      - run:
          name: init
          command: cd ./alert/src/environments/<< parameters.env >> && terraform init -backend-config="backend.cfg"
      - run:
          name: plan
          command: cd ./alert/src/environments/<< parameters.env >> && terraform plan -var "nr_account_id=${NEWRELIC_ACCOUNT_ID}" -var "nr_api_key=${NEWRELIC_API_KEY}"
  alert_apply:
    executor: newrelic_template
    parameters:
      env:
        type: string
    steps:
      - checkout
      - run:
          name: init
          command: cd ./alert/src/environments/<< parameters.env >> && terraform init -backend-config="backend.cfg"
      - run:
          name: apply
          command: cd ./alert/src/environments/<< parameters.env >> && terraform apply -auto-approve -var "nr_account_id=${NEWRELIC_ACCOUNT_ID}" -var "nr_api_key=${NEWRELIC_API_KEY}"

workflows:
  main:
    jobs:
      # For common
      - fmt

      # For aws template
      ## staging
      - aws_plan:
          name: staging_aws_plan
          env: staging
          context: stg-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          filters:
            branches:
              ignore:
                - main
      - aws_apply_approve:
          name: staging_aws_apply_approve
          requires:
            - staging_aws_plan
          type: approval
      - aws_apply:
          name: staging_aws_apply
          env: staging
          context: stg-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - staging_aws_apply_approve

      ## production
      - aws_plan:
          name: production_aws_plan
          env: production
          context: prd-newrelic-template  # 事前に作成した Contexts 名を指定してください。
      - aws_apply_approve:
          name: production_aws_apply_approve
          requires:
            - production_aws_plan
          type: approval
          filters:
            branches:
              only:
                - main
      - aws_apply:
          name: production_aws_apply
          env: production
          context: prd-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - production_aws_apply_approve

      # For alert template
      ## staging
      - alert_plan:
          name: staging_alert_plan
          env: staging
          context: stg-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          filters:
            branches:
              ignore:
                - main
          requires:
            - staging_aws_plan
      - alert_apply_approve:
          name: staging_alert_apply_approve
          requires:
            - staging_aws_apply
            - staging_alert_plan
          type: approval
      - alert_apply:
          name: staging_alert_apply
          env: staging
          context: stg-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - staging_alert_apply_approve

      ## production
      - alert_plan:
          name: production_alert_plan
          env: production
          context: prd-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - production_aws_plan
      - alert_apply_approve:
          name: production_alert_apply_approve
          requires:
            - production_aws_apply
            - production_alert_plan
          type: approval
          filters:
            branches:
              only:
                - main
      - alert_apply:
          name: production_alert_apply
          env: production
          context: prd-newrelic-template  # 事前に作成した Contexts 名を指定してください。
          requires:
            - production_alert_apply_approve
