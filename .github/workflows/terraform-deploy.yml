name: Deploy to Main

on:
  push:
    branches:
      - main

jobs:
  plan:
    name: Generate Plan
    uses: ./.github/workflows/common-terraform-plan.yml
    with:
      target_env: example # 環境名を指定してください
    secrets: inherit

  apply-aws:
    name: Approve and Apply AWS
    needs: plan
    runs-on: ubuntu-latest
    environment: example # 必要に応じて対象の環境に手動承認を設定してください
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Terraform version from file
        id: tfver
        run: echo "version=$(cat .terraform-version)" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.tfver.outputs.version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: AWS Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_nr_account_id: ${{ secrets.NEWRELIC_ACCOUNT_ID }}
          TF_VAR_nr_api_key: ${{ secrets.NEWRELIC_API_KEY }}
          TF_VAR_nr_license_key: ${{ secrets.NEWRELIC_LICENSE_KEY }}

  apply-alert:
    name: Approve and Apply Alert
    needs: [plan, apply-aws]
    runs-on: ubuntu-latest
    environment: example # 必要に応じて対象の環境に手動承認を設定してください
    steps:
      - name: Checkout
      uses: actions/checkout@v3

      - name:Set Terraform version from file
        id: tfver
        run: echo "version=$(cat .terraform-version)" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.tfver.outputs.version }}

       - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Alert Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_nr_account_id: ${{ secrets.NEWRELIC_ACCOUNT_ID }}
          TF_VAR_nr_api_key: ${{ secrets.NEWRELIC_API_KEY }}
          TF_VAR_nr_license_key: ${{ secrets.NEWRELIC_LICENSE_KEY }}